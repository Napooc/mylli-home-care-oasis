
/* iOS Safari specific fixes - maintains exact UI/UX while fixing compatibility */

/* iOS viewport and safe area fixes */
:root {
  --ios-safe-area-top: env(safe-area-inset-top);
  --ios-safe-area-bottom: env(safe-area-inset-bottom);
  --ios-safe-area-left: env(safe-area-inset-left);
  --ios-safe-area-right: env(safe-area-inset-right);
  --vh: 1vh; /* Fallback, will be updated by JS */
}

/* Fix iOS 100vh issue without changing layout */
@supports (-webkit-touch-callout: none) {
  .min-h-screen {
    min-height: calc(var(--vh, 1vh) * 100);
  }
  
  .h-screen {
    height: calc(var(--vh, 1vh) * 100);
  }
}

/* iOS Safari font rendering fixes */
@media (-webkit-min-device-pixel-ratio: 1) {
  body {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    text-rendering: optimizeLegibility;
  }
}

/* iOS touch and gesture fixes */
@media (pointer: coarse) {
  * {
    -webkit-tap-highlight-color: transparent;
    -webkit-touch-callout: none;
    -webkit-user-select: none;
    user-select: none;
  }
  
  input, textarea, [contenteditable] {
    -webkit-user-select: text;
    user-select: text;
  }
  
  button, a, [role="button"] {
    -webkit-user-select: none;
    user-select: none;
    cursor: pointer;
  }
}

/* iOS scroll and overscroll fixes */
@supports (-webkit-overflow-scrolling: touch) {
  body {
    -webkit-overflow-scrolling: touch;
    overscroll-behavior: none;
  }
  
  .overflow-auto,
  .overflow-scroll {
    -webkit-overflow-scrolling: touch;
  }
}

/* iOS keyboard and input fixes */
@media screen and (max-device-width: 768px) {
  input, textarea {
    font-size: 16px; /* Prevent iOS zoom on focus */
    -webkit-appearance: none;
    border-radius: 0;
  }
  
  input[type="search"] {
    -webkit-appearance: textfield;
  }
  
  input::-webkit-search-cancel-button {
    -webkit-appearance: searchfield-cancel-button;
  }
}

/* iOS flexbox and grid fixes */
@supports (-webkit-appearance: none) {
  .flex {
    display: -webkit-flex;
    display: flex;
  }
  
  .flex-col {
    -webkit-flex-direction: column;
    flex-direction: column;
  }
  
  .flex-row {
    -webkit-flex-direction: row;
    flex-direction: row;
  }
  
  .justify-center {
    -webkit-justify-content: center;
    justify-content: center;
  }
  
  .items-center {
    -webkit-align-items: center;
    align-items: center;
  }
}

/* iOS animation performance fixes */
@media (-webkit-min-device-pixel-ratio: 1) {
  * {
    -webkit-transform: translateZ(0);
    transform: translateZ(0);
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
    -webkit-perspective: 1000px;
    perspective: 1000px;
  }
  
  .transition-all,
  .transition-colors,
  .transition-transform {
    -webkit-transform: translateZ(0);
    transform: translateZ(0);
  }
}

/* iOS safe area handling for fixed elements */
@supports (padding: max(0px)) {
  .fixed.top-0 {
    padding-top: max(var(--ios-safe-area-top), 0px);
  }
  
  .fixed.bottom-0 {
    padding-bottom: max(var(--ios-safe-area-bottom), 0px);
  }
}

/* iOS-specific button and form fixes */
@supports (-webkit-appearance: none) {
  button {
    -webkit-appearance: none;
    appearance: none;
    border: none;
    background: none;
  }
  
  input[type="submit"],
  input[type="button"] {
    -webkit-appearance: none;
    appearance: none;
  }
}

/* iOS memory and performance optimizations */
@media screen and (max-device-width: 768px) {
  img {
    image-rendering: -webkit-optimize-contrast;
    image-rendering: crisp-edges;
  }
  
  video {
    -webkit-playsinline: true;
    playsinline: true;
  }
}

/* iOS-specific fixes for Webkit transforms */
@supports (-webkit-transform: translateZ(0)) {
  .transform {
    -webkit-transform: translateZ(0);
    transform: translateZ(0);
  }
  
  .hover\:scale-105:hover {
    -webkit-transform: scale(1.05) translateZ(0);
    transform: scale(1.05) translateZ(0);
  }
  
  .hover\:-translate-y-1:hover {
    -webkit-transform: translateY(-0.25rem) translateZ(0);
    transform: translateY(-0.25rem) translateZ(0);
  }
}

/* iOS status bar and notch compatibility */
@supports (padding: env(safe-area-inset-top)) {
  .ios-safe-top {
    padding-top: env(safe-area-inset-top);
  }
  
  .ios-safe-bottom {
    padding-bottom: env(safe-area-inset-bottom);
  }
  
  .ios-safe-left {
    padding-left: env(safe-area-inset-left);
  }
  
  .ios-safe-right {
    padding-right: env(safe-area-inset-right);
  }
}
